<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Kiasma&#39;s Blog</title>
    <link>https://Kiasma1.github.io/categories/go/</link>
    <description>Recent content in Go on Kiasma&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 23 Apr 2020 15:12:37 +0800</lastBuildDate>
    
	<atom:link href="https://Kiasma1.github.io/categories/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gin源码(0.1v)-logger</title>
      <link>https://Kiasma1.github.io/2020/04/gin%E6%BA%90%E7%A0%810.1v-logger/</link>
      <pubDate>Thu, 23 Apr 2020 15:12:37 +0800</pubDate>
      
      <guid>https://Kiasma1.github.io/2020/04/gin%E6%BA%90%E7%A0%810.1v-logger/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Gin源码(0.1v)-recovery</title>
      <link>https://Kiasma1.github.io/2020/04/gin%E6%BA%90%E7%A0%810.1v-recovery/</link>
      <pubDate>Thu, 23 Apr 2020 14:43:41 +0800</pubDate>
      
      <guid>https://Kiasma1.github.io/2020/04/gin%E6%BA%90%E7%A0%810.1v-recovery/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Gin源码(0.1v)-gin</title>
      <link>https://Kiasma1.github.io/2020/04/gin%E6%BA%90%E7%A0%810.1v-gin/</link>
      <pubDate>Thu, 23 Apr 2020 10:08:00 +0800</pubDate>
      
      <guid>https://Kiasma1.github.io/2020/04/gin%E6%BA%90%E7%A0%810.1v-gin/</guid>
      <description></description>
    </item>
    
    <item>
      <title>9. 测试和性能</title>
      <link>https://Kiasma1.github.io/2020/04/9.-%E6%B5%8B%E8%AF%95%E5%92%8C%E6%80%A7%E8%83%BD/</link>
      <pubDate>Sun, 19 Apr 2020 23:06:45 +0800</pubDate>
      
      <guid>https://Kiasma1.github.io/2020/04/9.-%E6%B5%8B%E8%AF%95%E5%92%8C%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;p&gt;使用 Go 语言的测试框架，可以在开发的过程中就进行单元测试和基准测试。和 go build 命令类似，go test 命令可以用来执行写好的测试代码，需要做的就是遵守一些规则来写测试。而且，可以将测试无缝地集成到代码工程和持续集成系统里。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>8. 标准库</title>
      <link>https://Kiasma1.github.io/2020/04/8.-%E6%A0%87%E5%87%86%E5%BA%93/</link>
      <pubDate>Fri, 17 Apr 2020 00:43:52 +0800</pubDate>
      
      <guid>https://Kiasma1.github.io/2020/04/8.-%E6%A0%87%E5%87%86%E5%BA%93/</guid>
      <description>&lt;p&gt;Go 标准库是一组核心包，用来扩展和增强语言的能力。这些包为语言增加了大量不同的类型。开发人员可以直接使用这些类型，而不用再写自己的包或者去下载其他人发布的第三方包。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>7. 并发模式</title>
      <link>https://Kiasma1.github.io/2020/04/7.-%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 14 Apr 2020 11:05:11 +0800</pubDate>
      
      <guid>https://Kiasma1.github.io/2020/04/7.-%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;我们会学习 3 个可以在实际工程里使用的包，这3 个包分别实现了不同的并发模式。每个包从一个实用的视角来讲解如何使用并发和通道。我们会学习如何用这个包简化并发程序的编写，以及为什么能简化的原因。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>6. 并发</title>
      <link>https://Kiasma1.github.io/2020/04/6.-%E5%B9%B6%E5%8F%91/</link>
      <pubDate>Sun, 12 Apr 2020 15:40:46 +0800</pubDate>
      
      <guid>https://Kiasma1.github.io/2020/04/6.-%E5%B9%B6%E5%8F%91/</guid>
      <description>&lt;p&gt;Go 语言里的并发指的是能让某个函数独立于其他函数运行的能力。当一个函数创建为 &lt;code&gt;goroutine&lt;/code&gt; 时，Go 会将其视为一个独立的工作单元。这个单元会被调度到可用的逻辑处理器上执行。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>5. Go语言的类型系统</title>
      <link>https://Kiasma1.github.io/2020/04/5.-go%E8%AF%AD%E8%A8%80%E7%9A%84%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sat, 11 Apr 2020 13:48:04 +0800</pubDate>
      
      <guid>https://Kiasma1.github.io/2020/04/5.-go%E8%AF%AD%E8%A8%80%E7%9A%84%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;Go 语言是一种静态类型的编程语言。这意味着，编译器需要在编译时知晓程序里每个值的类型。如果提前知道类型信息，编译器就可以确保程序合理地使用值。这有助于减少潜在的内存异常和 bug，并且使编译器有机会对代码进行一些性能优化，提高执行效率。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>4. 数组、切片和映射</title>
      <link>https://Kiasma1.github.io/2020/04/4.-%E6%95%B0%E7%BB%84%E5%88%87%E7%89%87%E5%92%8C%E6%98%A0%E5%B0%84/</link>
      <pubDate>Fri, 10 Apr 2020 13:40:29 +0800</pubDate>
      
      <guid>https://Kiasma1.github.io/2020/04/4.-%E6%95%B0%E7%BB%84%E5%88%87%E7%89%87%E5%92%8C%E6%98%A0%E5%B0%84/</guid>
      <description>&lt;p&gt;Go 语言有 3 种数据结构可以让用户管理集合数据：数组、切片和映射。&lt;/p&gt;
&lt;p&gt;了解这些数据结构，一般会从数组开始，因为数组是切片和映射的基础数据结构。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>3. 打包与工具链</title>
      <link>https://Kiasma1.github.io/2020/04/3.-%E6%89%93%E5%8C%85%E4%B8%8E%E5%B7%A5%E5%85%B7%E9%93%BE/</link>
      <pubDate>Wed, 08 Apr 2020 15:51:32 +0800</pubDate>
      
      <guid>https://Kiasma1.github.io/2020/04/3.-%E6%89%93%E5%8C%85%E4%B8%8E%E5%B7%A5%E5%85%B7%E9%93%BE/</guid>
      <description>&lt;p&gt;进一步介绍如何把代码组织成包，以及如何操作这些包&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>